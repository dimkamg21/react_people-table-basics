{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","components/HomePage/HomePage.tsx","components/NotFound/NotFound.tsx","Root.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleTable","person","name","sex","born","died","fatherName","motherName","slug","mother","father","personSlug","useParams","classNames","to","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","peopleFromServer","map","find","fath","moth","getPreparedPeople","catch","finally","length","getLinkClass","isActive","App","role","HomePage","NotFound","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.cb90ddae.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useParams, Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PeopleTable: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    mother,\n    father,\n  } = person;\n\n  const { personSlug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': slug === personSlug,\n      })}\n    >\n      <td>\n        <Link\n          className={classNames({\n            'has-text-danger': sex === 'f',\n          })}\n          to={`../${slug}`}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <Link\n            className=\"has-text-danger\"\n            to={`../${mother.slug}`}\n          >\n            {motherName}\n          </Link>\n        ) : (\n          motherName || '-'\n        )}\n      </td>\n      <td>\n        {father ? (\n          <Link to={`../${father.slug}`}>\n            {fatherName}\n          </Link>\n        ) : (\n          fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nconst getPreparedPeople = (people: Person[]) => {\n  return people.map(person => {\n    const father = people.find(fath => fath.name === person.fatherName);\n    const mother = people.find(moth => moth.name === person.motherName);\n\n    return {\n      ...person,\n      father,\n      mother,\n    };\n  });\n};\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then((peopleFromServer) => {\n        setPeople(getPreparedPeople(peopleFromServer));\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!!people.length && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <PeopleTable\n                    key={person.slug}\n                    person={person}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink, Outlet } from 'react-router-dom';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => {\n  return classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n};\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinkClass} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { NotFound } from './components/NotFound/NotFound';\n\nexport const Root = () => (\n  <Routes>\n    <Route path=\"/\" element={<App />}>\n      <Route index element={<HomePage />} />\n      <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n      <Route path=\"people\">\n        <Route path=\":personSlug?\" element={<PeoplePage />} />\n      </Route>\n      <Route path=\"*\" element={<NotFound />} />\n    </Route>\n  </Routes>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Root />\n    </Router>,\n  );\n"],"sourceRoot":""}